plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.asad.currencyconverter'
    compileSdk 33

    defaultConfig {
        applicationId "com.asad.currencyconverter"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    buildFeatures {
        buildConfig = true
    }

    flavorDimensions "default"

    productFlavors {
        stagging {
            dimension "default"

            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())

            buildConfigField("String", "CURRENCY_EXCHANGE_API_KEY", "\"${properties.getProperty('CURRENCY_EXCHANGE_API_KEY')}\"")
            buildConfigField("String", "CURRENCY_EXCHANGE_API_URL", CURRENCY_EXCHANGE_API_URL)
        }
        production {
            dimension "default"
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())

            buildConfigField("String", "CURRENCY_EXCHANGE_API_KEY", "\"${properties.getProperty('LIVE_CURRENCY_EXCHANGE_API_KEY')}\"")
            buildConfigField("String", "CURRENCY_EXCHANGE_API_URL", LIVE_CURRENCY_EXCHANGE_API_URL)
        }
    }
}

dependencies {

    // kotlin
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.core:core-ktx:1.10.0'

    // compose
    def composeBom = platform("androidx.compose:compose-bom:$composeBoM")
    implementation composeBom
    implementation 'androidx.compose.ui:ui' // input and measurement/layout
    implementation 'androidx.compose.ui:ui-tooling-preview' // Preview support
    debugImplementation 'androidx.compose.ui:ui-tooling'
    implementation 'androidx.compose.material:material'
    implementation 'androidx.compose.runtime:runtime-livedata'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha05"

    implementation("androidx.navigation:navigation-compose:$navVersion")

    // Hilt DI
    implementation("com.google.dagger:hilt-android:2.45")
    kapt("com.google.dagger:hilt-compiler:2.45")
    kapt("androidx.hilt:hilt-compiler:1.0.0")


    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.4.1")
    implementation("androidx.lifecycle:lifecycle-extensions:2.2.0")

    // coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0")

    // retrofit
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")
    implementation("com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2")
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.1")

    // Gson
    implementation("com.google.code.gson:gson:2.8.9")
    // Timber
    implementation("com.jakewharton.timber:timber:4.7.1")

    // room
//    implementation("kapt androidx.room:room-compiler:2.4.1")
//    implementation("androidx.room:room-ktx:"2.4.1)

    // WorkManager
    implementation("androidx.work:work-runtime-ktx:2.7.1")
    implementation "androidx.hilt:hilt-work:1.0.0"

    // androidTest
    androidTestImplementation composeBom
}